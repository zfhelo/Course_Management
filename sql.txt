CREATE DATABASE course CHARSET utf8;
USE course;

CREATE TABLE student (
	id INT PRIMARY KEY AUTO_INCREMENT,
	username VARCHAR(12) UNIQUE NOT NULL,
	`password` VARCHAR(30) NOT NULL,
	nickname VARCHAR(30) NOT NULL,
	photo VARCHAR(255),
	phone VARCHAR(11),
	`time` TIMESTAMP DEFAULT NOW()
);


CREATE TABLE teacher (
	id INT PRIMARY KEY AUTO_INCREMENT,
	username VARCHAR(12) UNIQUE NOT NULL,
	`password` VARCHAR(30) NOT NULL,
	nickname VARCHAR(30) NOT NULL,
	photo VARCHAR(255),
	phone VARCHAR(11),
	`time` TIMESTAMP DEFAULT NOW()
);

CREATE TABLE course(
	id INT PRIMARY KEY AUTO_INCREMENT,
	tid INT NOT NULL,
	FOREIGN KEY (tid) REFERENCES teacher(id) ON DELETE CASCADE ON UPDATE CASCADE,
	`name` VARCHAR(255) NOT NULL,
	number VARCHAR(30) NOT NULL UNIQUE,
	image VARCHAR(1000),
	`time` TIMESTAMP DEFAULT NOW()
);

CREATE TABLE choise_course (
	id INT PRIMARY KEY AUTO_INCREMENT,
	sid INT NOT NULL,
	cid INT NOT NULL,
	FOREIGN KEY (sid) REFERENCES student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE admin (
	id INT PRIMARY KEY AUTO_INCREMENT,
	username VARCHAR(12) UNIQUE NOT NULL,
	`password` VARCHAR(30) NOT NULL
);

CREATE TABLE single_question (
	id INT PRIMARY KEY AUTO_INCREMENT,
	cid INT NOT NULL,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	content VARCHAR(1000) NOT NULL,
	choise_1 VARCHAR(500) NOT NULL,
	choise_2 VARCHAR(500) NOT NULL,
	choise_3 VARCHAR(500) NOT NULL,
	choise_4 VARCHAR(500) NOT NULL,
	answer VARCHAR(500) NOT NULL,
	grade INT NOT NULL,
	`time` TIMESTAMP DEFAULT NOW()

);

CREATE TABLE gap_filling (
	id INT PRIMARY KEY AUTO_INCREMENT,
	cid INT NOT NULL,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	content VARCHAR(1000) NOT NULL,
	answer VARCHAR(1000) NOT NULL,
	grade INT NOT NULL,
	`time` TIMESTAMP DEFAULT NOW()

);

CREATE TABLE essay_question(
	id INT PRIMARY KEY AUTO_INCREMENT,
	cid INT NOT NULL,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	content VARCHAR(1000) NOT NULL,
	grade INT NOT NULL,
	`time` TIMESTAMP DEFAULT NOW()
);



CREATE TABLE exam_paper_model(
	id INT PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(30) NOT NULL,
	tid INT NOT NULL,
	cid INT NOT NULL,
	`enable` BOOLEAN DEFAULT FALSE,
    `hide` BOOLEAN DEFAULT TRUE,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (tid) REFERENCES teacher(id) ON DELETE CASCADE ON UPDATE CASCADE,
	`time` TIMESTAMP DEFAULT NOW()
);

CREATE TABLE exam_paper (
	id INT PRIMARY KEY AUTO_INCREMENT,
	sid INT NOT NULL,
	`mid` INT NOT NULL,
	grade FLOAT DEFAULT 0.0,
	`status` BOOLEAN DEFAULT FALSE,
	`time`  TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (sid) REFERENCES student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (`mid`) REFERENCES exam_paper_model(id) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE exam_que_single(
	id INT PRIMARY KEY AUTO_INCREMENT,
	eid INT NOT NULL,
	single_id INT NOT NULL,
	answer VARCHAR(1000),
	`time`  TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (eid) REFERENCES exam_paper(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (single_id) REFERENCES single_question(id) ON DELETE CASCADE ON UPDATE CASCADE

);


CREATE TABLE exam_que_gap(
	id INT PRIMARY KEY AUTO_INCREMENT,
	eid INT NOT NULL,
	gap_id INT NOT NULL,
	answer VARCHAR(1000),
	`time`  TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (eid) REFERENCES exam_paper(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (gap_id) REFERENCES gap_filling(id) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE exam_que_essay(
	id INT PRIMARY KEY AUTO_INCREMENT,
	eid INT NOT NULL,
	essay_id INT NOT NULL,
	answer TEXT,
	`time`  TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (eid) REFERENCES exam_paper(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (essay_id) REFERENCES essay_question(id) ON DELETE CASCADE ON UPDATE CASCADE
);

create table teacher_resources (
    id INT PRIMARY KEY AUTO_INCREMENT,
    cid INT NOT NULL,
    tid INT NOT NULL,
    title VARCHAR(1000) NOT NULL,
    path VARCHAR(1000) NOT NULL,
    size INT NOT NULL,
    `time`  TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (tid) REFERENCES teacher(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE
);
create table student_resources (
    id INT PRIMARY KEY AUTO_INCREMENT,
    cid INT NOT NULL,
    sid INT NOT NULL,
    title VARCHAR(1000) NOT NULL,
    path VARCHAR(1000) NOT NULL,
    size INT NOT NULL,
    `time`  TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (sid) REFERENCES student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (cid) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE
);

